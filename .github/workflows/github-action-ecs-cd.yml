name: Deploy to Amazon ECS

on:
  push:
    branches:
      - master

jobs:
  CI:
    uses: ./.github/workflows/github-action-ci-script.yml
    secrets: inherit

  prod-CD:
    needs: CI
    environment: test
    runs-on: ubuntu-latest

    steps:
      - name: Set up AWS IAM
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      
      - name: downloads zip to s3
        run : |
          aws s3 cp s3://hr-backend-zip/hirecruit-backend-project.zip .
          unzip hirecruit-backend-project.zip 

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: hirecruit
            IMAGE_TAG: latest
        run: |
            # Build a docker container and
            # push it to ECR so that it can
            # be deployed to ECS.
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
            task-definition: task-definition.json
            container-name: hirecruit-server-container
            image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
            task-definition: ${{ steps.task-def.outputs.task-definition }}
            service: service-for-hirecruit
            cluster: hirecruit
            wait-for-service-stability: true

      - name: HiRecruit Backend PROD-CD success Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: ${{ success() }}
        with:
          title: üéâ HiRecruit Backend PROD-CD success üéâ
          webhook: ${{ secrets.DISCORD_WEBHOOK_TEST_CD_BOT }}
          color: 00FF00

      - name: HiRecruit Backend PROD-CD failure Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: ${{ failure() }}
        with:
          title: ‚ùå HiRecruit Backend PROD-CD failed ‚ùå
          webhook: ${{ secrets.DISCORD_WEBHOOK_TEST_CD_BOT }}
          color: FF0000