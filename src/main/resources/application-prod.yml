.env:
  filename: .env.prod
  prefix: ""

hr.domain: hirecruit.site

server:
  port: 8080

  # UTF-8 사용
  servlet:
    session:
      cookie:
        domain: ${hr.domain}
        max-age: P1D # 1일
        secure: true
        same-site: none
        name: HRSESSION
      timeout: 1440m # 1440분 = 1일

spring:
  config:
    import: classpath:oauth/github-oauth.yml

  mvc:
    path match:
      matching-strategy: ant_path_matcher

  batch:
    job:
      enabled: false # application 실행시점에 batch를 실행하지 않는다.

  # oauth2 redirect-uri
  security:
    oauth2:
      client:
        registration:
          github:
            redirect-uri: https://server.${hr.domain}/api/v1/auth/oauth2/redirection-endpoint

  session:
    store-type: redis
    redis:
      flush-mode: immediate
      namespace: spring:session # redis에 세션 저장시 네임스페이스

  #DB 설정
  datasource:
    url: ${DATABASE_URL}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

  redis:
    host: ${REDIS_HOST}
    port: 6379

  ### JPA 설정 ###
  jpa:
    database-platform: org.hibernate.dialect.MySQL57Dialect
    database: mysql
    hibernate:
      ddl-auto: none

    defer-datasource-initialization: true # Application 실행시점에 data.sql 실행여부

  sql:
    init:
#      mode: always # 항상 data.sql를 database에 날린다.
      mode: never
      schema-locations:
        - classpath:sql/data.sql
        - classpath:sql/batch-application.sql

### Logging ###
logging:
  level:
    site.hirecruit.hr : info
  config: classpath:logback/logback-prod.xml

oauth2.login.success.redirect-base-uri: https://www.${hr.domain}